package com.tenpo.percentage.config.errors.enums;

import lombok.Getter;
import org.springframework.http.HttpStatus;

@Getter
public enum ErrorReason {
  BAD_REQUEST(HttpStatus.BAD_REQUEST),
  UNAUTHORIZED(HttpStatus.UNAUTHORIZED),
  FORBIDDEN(HttpStatus.FORBIDDEN),
  NOT_FOUND(HttpStatus.NOT_FOUND),
  METHOD_NOT_ALLOWED(HttpStatus.METHOD_NOT_ALLOWED),
  CONFLICT(HttpStatus.CONFLICT),
  GONE(HttpStatus.GONE),
  UNSUPPORTED_MEDIA_TYPE(HttpStatus.UNSUPPORTED_MEDIA_TYPE),
  UNPROCESSABLE_ENTITY(HttpStatus.UNPROCESSABLE_ENTITY),
  TOO_MANY_REQUESTS(HttpStatus.TOO_MANY_REQUESTS),
  INTERNAL_SERVER_ERROR(HttpStatus.INTERNAL_SERVER_ERROR),
  SERVICE_UNAVAILABLE(HttpStatus.SERVICE_UNAVAILABLE),
  GATEWAY_TIMEOUT(HttpStatus.GATEWAY_TIMEOUT),
  HTTP_COMMUNICATION_FAILURE(HttpStatus.INTERNAL_SERVER_ERROR),
  REQUEST_PARAMETER_NOT_VALID(HttpStatus.BAD_REQUEST),
  REQUEST_PARAMETER_MISSING(HttpStatus.BAD_REQUEST),
  REQUEST_BODY_EMPTY(HttpStatus.BAD_REQUEST),
  REQUEST_PARAMETER_TYPE_MISMATCH(HttpStatus.BAD_REQUEST),
  REQUEST_BODY_INVALID_FORMAT(HttpStatus.BAD_REQUEST),
  JSON_SINTAXIS_NOT_VALID(HttpStatus.BAD_REQUEST),
  JSON_MAPPING_NOT_VALID(HttpStatus.BAD_REQUEST),
  CONSTRAINT_VIOLATION(HttpStatus.BAD_REQUEST),
  GENERIC_ERROR(HttpStatus.INTERNAL_SERVER_ERROR);

  private final HttpStatus httpStatus;

  ErrorReason(HttpStatus httpStatus) {
    this.httpStatus = httpStatus;
  }
}
